$date
	Fri Sep 21 14:11:48 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ carryout $end
$var wire 1 % sum $end
$upscope $end
$scope module testFullAdder $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$var reg 1 ( a $end
$var reg 1 ) b $end
$var reg 1 * carryin $end
$scope module adder $end
$var wire 1 + AandB $end
$var wire 1 , AandC $end
$var wire 1 - AxorB $end
$var wire 1 . BandC $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 carryin $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
01
00
0/
z.
z-
z,
z+
0*
0)
0(
x'
x&
x%
x$
z#
z"
z!
$end
#50000
0.
0,
0+
0-
#100000
0&
0'
#1000000
1*
11
#1050000
1'
#2000000
0*
01
1)
10
#2050000
0'
1-
#2100000
1'
#3000000
1*
11
#3050000
0'
1.
#3100000
1&
#4000000
0*
01
0)
00
1(
1/
#4050000
1'
0.
#4100000
0&
#5000000
1*
11
#5050000
0'
1,
#5100000
1&
#6000000
0*
01
1)
10
#6050000
1'
0,
0-
1+
#6100000
0'
#7000000
1*
11
#7050000
1'
1,
1.
#8000000
